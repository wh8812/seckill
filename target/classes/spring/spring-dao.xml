<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
      <!--配置整合mybatis的过程  -->
      <!--1:配置数据库相关参数   properties的属性：${url} -->
      <context:property-placeholder location="classpath:jdbc.properties"/>
      <!--2:数据库连接池 -->
      <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
         <!--配置连接池属性 -->
        <property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${ds.initialSize}" />
		<property name="minIdle" value="${ds.minIdle}" />
		<property name="maxActive" value="${ds.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${ds.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${ds.validationQuery}" />
		<property name="testWhileIdle" value="${ds.testWhileIdle}" />
		<property name="testOnBorrow" value="${ds.testOnBorrow}" />
		<property name="testOnReturn" value="${ds.testOnReturn}" />

		<property name="filters" value="${ds.filters}" />
      
      </bean>
      
      <!--3:配置sqlSessionFactory对象 -->
      <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <!-- 注入数据库连接池 -->
      <property name="dataSource" ref="dataSource" />
      <!-- 配置MyBatis全局配置文件:mybatis-config.xml -->
      <property name="configLocation" value="classpath:mybatis-config.xml"/>
      <!-- 扫描entity包 使用别名com.seckill.po.Seckill -> Seckill -->
      <property name="typeAliasesPackage" value="com.seckill.po"/>
      <!-- 扫描sql配置文件：mapper需要的xml文件 -->
      <property name="mapperLocations" value="classpath:mapper/*.xml" />
      </bean>
      
      <!--4:配置扫描Dao接口包,动态实现Dao接口,注入到spring容器中 -->
      <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <!-- 注入sqlSessionFactory -->
      <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
      <!-- 给出扫描Dao接口包 -->
      <property name="basePackage" value="com.seckill.dao"/>
      
      </bean>
      
      <!-- 注入redisclient -->
     <bean id="redisClient" class="com.seckill.cache.RedisClient">
         <constructor-arg index="0" value="122.226.100.105"></constructor-arg>
         <constructor-arg index="1" value="6379"></constructor-arg>
     </bean>
</beans>